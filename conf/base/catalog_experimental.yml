# Experimental pipeline catalog entries
# Each pipeline gets its own directory structure using {pipeline_name} templating

# Intermediate outputs from each step of the experimental pipeline
# These are kept as MemoryDatasets since they're numpy arrays, not DataFrames
"{pipeline_name}__imputer_output":
  type: MemoryDataset
  metadata:
    kedro-viz:
      layer: feature

"{pipeline_name}__reducer_output":
  type: MemoryDataset
  metadata:
    kedro-viz:
      layer: feature

"{pipeline_name}__scaler_output":
  type: MemoryDataset
  metadata:
    kedro-viz:
      layer: feature

"{pipeline_name}__filter_output":
  type: MemoryDataset
  metadata:
    kedro-viz:
      layer: feature

"{pipeline_name}__clusterer_output":
  type: MemoryDataset
  metadata:
    kedro-viz:
      layer: model_output

# Final outputs
"{pipeline_name}__labels_dataframe":
  type: pandas.CSVDataset
  filepath: data/${extract_polis_id:${runtime_params:polis_url, ${globals:build_polis_url}}, ${runtime_params:polis_id, ${globals:build_polis_id}}}/{pipeline_name}/03_primary/labels.csv
  save_args:
    index: false
  metadata:
    kedro-viz:
      layer: primary

"{pipeline_name}__scatter_plot":
  type: plotly.JSONDataset
  filepath: data/${extract_polis_id:${runtime_params:polis_url, ${globals:build_polis_url}}, ${runtime_params:polis_id, ${globals:build_polis_id}}}/{pipeline_name}/08_reporting/scatter_plot.json
  metadata:
    kedro-viz:
      layer: reporting

"{pipeline_name}__scatter_plot_by_participant_id":
  type: plotly.JSONDataset
  filepath: data/${extract_polis_id:${runtime_params:polis_url, ${globals:build_polis_url}}, ${runtime_params:polis_id, ${globals:build_polis_id}}}/{pipeline_name}/08_reporting/scatter_plot_by_participant_id.json
  metadata:
    kedro-viz:
      layer: reporting

"{pipeline_name}__scatter_plot_by_vote_proportions":
  type: plotly.JSONDataset
  filepath: data/${extract_polis_id:${runtime_params:polis_url, ${globals:build_polis_url}}, ${runtime_params:polis_id, ${globals:build_polis_id}}}/{pipeline_name}/08_reporting/scatter_plot_by_vote_proportions.json
  metadata:
    kedro-viz:
      layer: reporting

"{pipeline_name}__scatter_plot_image_path":
  type: text.TextDataset
  filepath: data/${extract_polis_id:${runtime_params:polis_url, ${globals:build_polis_url}}, ${runtime_params:polis_id, ${globals:build_polis_id}}}/{pipeline_name}/08_reporting/scatter_plot_image_path.txt
  metadata:
    kedro-viz:
      layer: reporting

"{pipeline_name}__scatter_plot_by_participant_id_image_path":
  type: text.TextDataset
  filepath: data/${extract_polis_id:${runtime_params:polis_url, ${globals:build_polis_url}}, ${runtime_params:polis_id, ${globals:build_polis_id}}}/{pipeline_name}/08_reporting/scatter_plot_by_participant_id_image_path.txt
  metadata:
    kedro-viz:
      layer: reporting

"{pipeline_name}__scatter_plot_by_vote_proportions_image_path":
  type: text.TextDataset
  filepath: data/${extract_polis_id:${runtime_params:polis_url, ${globals:build_polis_url}}, ${runtime_params:polis_id, ${globals:build_polis_id}}}/{pipeline_name}/08_reporting/scatter_plot_by_vote_proportions_image_path.txt
  metadata:
    kedro-viz:
      layer: reporting

# Red-Dwarf minimal dataset outputs
"{pipeline_name}__votes_parquet":
  type: pandas.ParquetDataset
  filepath: data/${extract_polis_id:${runtime_params:polis_url, ${globals:build_polis_url}}, ${runtime_params:polis_id, ${globals:build_polis_id}}}/{pipeline_name}/03_primary/votes.parquet
  metadata:
    kedro-viz:
      layer: primary

"{pipeline_name}__projections_json":
  type: json.JSONDataset
  filepath: data/${extract_polis_id:${runtime_params:polis_url, ${globals:build_polis_url}}, ${runtime_params:polis_id, ${globals:build_polis_id}}}/{pipeline_name}/03_primary/projections.json
  metadata:
    kedro-viz:
      layer: primary

"{pipeline_name}__statements_json":
  type: json.JSONDataset
  filepath: data/${extract_polis_id:${runtime_params:polis_url, ${globals:build_polis_url}}, ${runtime_params:polis_id, ${globals:build_polis_id}}}/{pipeline_name}/03_primary/statements.json
  metadata:
    kedro-viz:
      layer: primary

"{pipeline_name}__meta_json":
  type: json.JSONDataset
  filepath: data/${extract_polis_id:${runtime_params:polis_url, ${globals:build_polis_url}}, ${runtime_params:polis_id, ${globals:build_polis_id}}}/{pipeline_name}/03_primary/meta.json
  metadata:
    kedro-viz:
      layer: primary

# Legacy outputs for backward compatibility (can be removed if not needed)
scaler_output:
  type: MemoryDataset
  metadata:
    kedro-viz:
      layer: feature
